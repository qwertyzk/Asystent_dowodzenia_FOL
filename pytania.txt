1.1.1 (*)
"W termach nie mamy wiązania zmiennych, więc zmienne wolne to te, które tam po prostu występują. "
forall x. x=x

1.1.2 (*)
Czy w reprezentacji, w ktorej zmienne zwiazane to liczby, a wolne to napisy
wystepuje problem przechwytywania zmiennej?
Być może term zawiera zmienną o takiej samej nazwie jak zmienna
przy pewnym kwantyfikatorze, ale są to inne konstruktory
(czy to generuje jakies problemy?) Nawet jesli konstruktory sa inne
i moj program nie pomyli tych zmiennych to user
pewnie chcialby widziec drzewo dowodu w bardziej ludzkiej
formie czyli bez indeksow de bruijna, ale wtedy gdy wystepuje
zmienna zwiazana "x" i wolna "x" to takie drzewo może
wprowadzac w blad.


Przyklad 
∀x∃y x<y
w mojej notacji: ∀x∃y 2<1
eliminacja ∀ (podstawiam y za x): ∃y (free y)<1
y przy ∃ i w free to dwie różne zmienne



Można inaczej reprezentować zmienne wolne (nazwy), a inaczej zmienne związane (liczby, albo indeksy
de Bruijna). W tym prostym podejściu czyha jednak pułapka: istnieją wartości typu formula, które są
niepoprawne: mogą wystąpić wolne wystąpienia zmiennych reprezentowanych jako związane.

(*)
Jakie są te niepoprawne wartosci typu formula?
Czy chodzi o to że użytkownik teoretycznie mógłby stworzyć
term (Bound 0) mimo że nigdzie nie ma kwantyfikatora?
(u mnie tak sie nie da zrobic, bo jest podzial na user_formula i formula)

1.2

wprowadzanie forall:
jak najlepiej napisac tę regułę (w tył)? 

pozwolić userowi wybrać nazwe świeżej zmiennej? (sprawdzić czy jest legalna)
(niekonieczne chcę brac nazwe x)


Dzieki indeksom zawsze wiadomo o ktora zmienna chodzi,
wiec przy kwant moze byc dowolna nazwa. To jest jednak
skutek przyjetej koncepcji. Czy w zaden sposob nie przeczy to
regulom dowodzenia z pdf?

czy po wybraniu świeżej zmiennej trafia ona do zbioru
zalozeń???? (raczej nie)


Dla formuł postaci r(t1, . . . , tn) nie mamy żadnych specjalnych reguł dowodzenia (ale można korzystać
z reguły Ax). Czyli zakladam że te relacje są w zbiorze
założeń?


eliminacja forall:
czy tu wystarczy pozwolic uzytkownikowi podac formule
forall(x, f) oraz term i sprawdzić naiwnie podstaiwnie
termu pod x? Czy tu sie moze stac cos zlego?

xd
Po co są reguły dowodzenia z pliku Logic? 